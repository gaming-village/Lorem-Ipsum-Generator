{"version":3,"sources":["components/Button.tsx","components/TopBar.tsx","components/TitleBar.tsx","components/Program.tsx","components/Computer.tsx","App.tsx","reportWebVitals.js","utils.ts","Game.ts","index.tsx"],"names":["Button","props","className","text","TopBar","id","TitleBar","title","hasMinimizeButton","alt","Program","children","defaultProps","Computer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElem","elem","document","getElementById","Error","Game","ticks","tps","previousLorem","tick","this","lorem","loremDiff","updateLorem","displayLoremChange","_lorem","value","loremCounterText","querySelector","innerHTML","num","dpp","power","Math","pow","round","Number","EPSILON","roundNum","toString","ReactDOM","render","StrictMode","updateViewSizes","views","Array","from","getElementsByClassName","height","window","innerHeight","offsetHeight","style","onload","addEventListener","setInterval","keysDown","currentLoremIndex","event","keyCode","includes","push","String","fromCharCode","key","loremTemplate","currentLetter","length","typeLorem","splice","indexOf"],"mappings":"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","file":"static/js/main.f86b07a6.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Button = (props: { text: string }) => {\n   return (\n      <button className=\"button\">\n         {props.text}\n      </button>\n   )\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport \"../css/top-bar.css\";\n\nconst TopBar = () => {\n   return (\n      <div id=\"top-bar\">\n         <div className=\"container\">\n            <Button text=\"Computer\" />\n            <Button text=\"Mail\" />\n            <Button text=\"Corporate Overview\" />\n            <Button text=\"Settings\" />\n         </div>\n      </div>\n   )\n}\n\nexport default TopBar;","import React from \"react\";\n\ninterface TitleBarProps {\n   title: string;\n   hasMinimizeButton: boolean;\n}\n\nconst TitleBar = (props: TitleBarProps) => {\n   return (\n      <div className=\"title-bar\">\n         {props.title}\n         {props.hasMinimizeButton ? <img className=\"minimize\" alt=\"\" /> : \"\"}\n      </div>\n   )\n}\n\nexport default TitleBar;\n","import React from \"react\";\nimport TitleBar from \"./TitleBar\";\n\ninterface ProgramProps {\n   id?: string;\n   children?: JSX.Element;\n}\n\nconst defaultProps: ProgramProps = {\n   id: \"\"\n}\n\nconst Program: React.FunctionComponent<ProgramProps> = (props: ProgramProps) => {\n   return (\n      <div id={props.id} className=\"windows-program\">\n         <TitleBar title=\"lorem_counter.gov\" hasMinimizeButton={false} />\n         {props.children}\n      </div>\n   )\n}\n\nProgram.defaultProps = defaultProps;\n\nexport default Program;\n","import React from \"react\";\nimport \"../css/computer.css\";\nimport Program from \"./Program\";\n\nconst Computer = () => {\n   return (\n      <div id=\"computer\" className=\"view\">\n         <div id=\"test\"></div>\n         <Program id=\"lorem-counter\">\n            <span></span>\n         </Program>\n      </div>\n   )\n}\n\nexport default Computer;\n","import React from \"react\";\nimport TopBar from \"./components/TopBar\";\nimport Computer from \"./components/Computer\";\n\nfunction App() {\n   return (\n      <>\n         <TopBar />\n         <Computer />\n      </>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getElem(id: string): Element {\n   const elem = document.getElementById(id);\n   if (elem) return elem;\n   throw new Error(`Element '${id}' could not be found.`);\n}\nexport function roundNum(num: number, dpp: number): number {\n   const power = Math.pow(10, dpp)\n   return Math.round((num + Number.EPSILON) * power) / power;\n}","import { roundNum, getElem } from \"./utils\";\nimport { updateSave } from \"./save\";\n\nconst Game = {\n   ticks: 0 as number,\n   tps: 10,\n   // TODO: set this to lorem num when the game loads\n   previousLorem: 0 as number,\n   tick: function() {\n      this.ticks++;\n\n      if (this.previousLorem !== this.lorem) {\n         const loremDiff: number = this.lorem - this.previousLorem;\n\n         this.updateLorem();\n         this.displayLoremChange(loremDiff);\n      }\n\n      const SECONDS_BETWEEN_SAVES: number = 10;\n      if (this.ticks % (this.tps * SECONDS_BETWEEN_SAVES) === 0) {\n         updateSave();\n      }\n   },\n   _lorem: 0 as number,\n   get lorem() {\n      return this._lorem;\n   },\n   set lorem(value) {\n      this._lorem = value;\n   },\n   updateLorem: function() {\n      const loremCounterText = getElem(\"lorem-counter\").querySelector(\"span\");\n      if (loremCounterText) loremCounterText.innerHTML = roundNum(this.lorem, 2).toString();\n   },\n   displayLoremChange: function(loremDiff: number) {\n\n   }\n};\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/index.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Game from \"./Game\";\nimport { getElem } from \"./utils\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nconst updateViewSizes = () => {\n   const views: HTMLElement[] = Array.from(document.getElementsByClassName(\"view\") as HTMLCollectionOf<HTMLElement>);\n   const height = window.innerHeight - (getElem(\"top-bar\") as HTMLElement).offsetHeight;\n   for (const view of views) {\n      view.style.height = `${height}px`;\n   }\n};\nwindow.onload = () => {\n   updateViewSizes();\n   window.addEventListener(\"resize\", () => {\n      updateViewSizes();\n   });\n\n   // Set up the tick shenanigans\n   setInterval(() => Game.tick(), 1000 / Game.tps);\n\n   // Display the lorem count everywhere\n   Game.updateLorem();\n};\n\nlet keysDown: number[] = [];\nlet currentLoremIndex: number = 0;\nconst typeLorem = (key: string) => {\n\n   const loremTemplate: string = \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores, aliquid! Officia amet adipisci porro repellat deserunt vero quos ad id sint dolore iure odio reprehenderit dolores sed, molestias vitae dicta! \";\n   const currentLetter = loremTemplate[currentLoremIndex++ % loremTemplate.length];\n   getElem(\"test\").innerHTML += currentLetter;\n\n   Game.lorem += 0.1;\n}\ndocument.addEventListener(\"keydown\", event => {\n   const keyCode: number = event.keyCode;\n\n   // When any letter key is pressed\n   if (keyCode >= 65 && keyCode <= 90 && !keysDown.includes(keyCode)) {\n      keysDown.push(keyCode)\n      const key = String.fromCharCode(keyCode)\n      typeLorem(key);\n   }\n});\ndocument.addEventListener(\"keyup\", function(event) {\n   const keyCode: number = event.keyCode;\n   keysDown.splice(keysDown.indexOf(keyCode), 1);\n});"],"sourceRoot":""}